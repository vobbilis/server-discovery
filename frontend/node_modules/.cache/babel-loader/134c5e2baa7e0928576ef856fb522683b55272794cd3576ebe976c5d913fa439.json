{"ast":null,"code":"var _jsxFileName = \"/Users/vobbilis/go/src/github.com/vobbilis/codegen/project1/frontend/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Grid, Card, CardContent, Typography, CircularProgress, Box, Paper, Divider, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Chip, Button, Drawer, IconButton, List, ListItem, ListItemText, ListSubheader } from '@mui/material';\nimport { PieChart, Pie, Cell, ResponsiveContainer, BarChart, Bar, XAxis, YAxis, Tooltip } from 'recharts';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [runningDiscoveries, setRunningDiscoveries] = useState([]);\n  const [selectedServer, setSelectedServer] = useState(null);\n  const [serverDetails, setServerDetails] = useState(null);\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [detailsLoading, setDetailsLoading] = useState(false);\n  const [stats, setStats] = useState({\n    serverCount: 0,\n    discoveryCount: 0,\n    successRate: 0,\n    regions: {},\n    lastDiscovery: null,\n    recentDiscoveries: [],\n    servers: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchStats();\n  }, []);\n  const fetchStats = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/stats');\n      if (!response.ok) {\n        throw new Error(`API returned ${response.status}: ${response.statusText}`);\n      }\n      const data = await response.json();\n      setStats(data);\n      setError(null);\n    } catch (err) {\n      console.error('Error fetching stats:', err);\n      setError('Failed to load dashboard data. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle running a discovery on a server\n  const handleRunDiscovery = async serverId => {\n    try {\n      // Add the server ID to the running discoveries list\n      setRunningDiscoveries([...runningDiscoveries, serverId]);\n\n      // Make API call to start discovery\n      const response = await fetch(`/api/servers/${serverId}/discover`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`API returned ${response.status}: ${response.statusText}`);\n      }\n\n      // Refresh stats after a short delay to allow the discovery to start\n      setTimeout(() => {\n        fetchStats();\n        // Remove the server from running discoveries\n        setRunningDiscoveries(runningDiscoveries.filter(id => id !== serverId));\n      }, 2000);\n    } catch (err) {\n      console.error(`Error starting discovery for server ${serverId}:`, err);\n      setError(`Failed to start discovery for server ID ${serverId}`);\n      // Remove the server from running discoveries\n      setRunningDiscoveries(runningDiscoveries.filter(id => id !== serverId));\n    }\n  };\n\n  // Handle opening the server details drawer\n  const handleServerClick = async serverId => {\n    try {\n      setDetailsLoading(true);\n      setDrawerOpen(true);\n\n      // Find the server in the current stats\n      const server = stats.servers.find(s => s.id === serverId);\n      setSelectedServer(server);\n\n      // Fetch detailed server information\n      const response = await fetch(`/api/servers/${serverId}`);\n      if (!response.ok) {\n        throw new Error(`API returned ${response.status}: ${response.statusText}`);\n      }\n      const data = await response.json();\n      setServerDetails(data);\n    } catch (err) {\n      console.error(`Error fetching server details for server ${serverId}:`, err);\n      setError(`Failed to load server details for ID ${serverId}`);\n    } finally {\n      setDetailsLoading(false);\n    }\n  };\n\n  // Handle closing the drawer\n  const handleCloseDrawer = () => {\n    setDrawerOpen(false);\n  };\n\n  // Debug render\n  console.log('Dashboard rendering with stats:', stats, 'loading:', loading, 'error:', error);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        variant: \"h6\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this);\n  }\n  if (!stats) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        variant: \"h6\",\n        children: \"No data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Prepare data for charts\n  const successRateData = [{\n    name: 'Success',\n    value: stats.successRate\n  }, {\n    name: 'Failure',\n    value: 100 - stats.successRate\n  }];\n  const regionData = Object.entries(stats.regions || {}).map(([region, count]) => ({\n    name: region || 'Unknown',\n    count\n  }));\n  const COLORS = ['#00C49F', '#FF8042', '#0088FE', '#FFBB28', '#8884d8'];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: 'background.paper',\n        padding: 2,\n        borderRadius: 1,\n        boxShadow: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Server Discovery Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Servers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h3\",\n                color: \"primary\",\n                children: stats.serverCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/servers\",\n                  children: \"View all servers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Discoveries\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h3\",\n                color: \"primary\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/discoveries\",\n                  style: {\n                    color: 'inherit',\n                    textDecoration: 'none',\n                    '&:hover': {\n                      textDecoration: 'underline',\n                      color: 'primary.main'\n                    }\n                  },\n                  children: stats.discoveryCount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: \"Total discovery operations\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Success Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h3\",\n                color: \"primary\",\n                children: [stats.successRate.toFixed(1), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: \"Discovery success rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              height: 300\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Success Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: \"90%\",\n              children: /*#__PURE__*/_jsxDEV(PieChart, {\n                children: [/*#__PURE__*/_jsxDEV(Pie, {\n                  data: successRateData,\n                  cx: \"50%\",\n                  cy: \"50%\",\n                  labelLine: false,\n                  outerRadius: 80,\n                  fill: \"#8884d8\",\n                  dataKey: \"value\",\n                  label: ({\n                    name,\n                    percent\n                  }) => `${name}: ${(percent * 100).toFixed(1)}%`,\n                  children: successRateData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                    fill: index === 0 ? '#00C49F' : '#FF8042'\n                  }, `cell-${index}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              height: 300\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Servers by Region\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: \"90%\",\n              children: /*#__PURE__*/_jsxDEV(BarChart, {\n                data: regionData,\n                children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                  dataKey: \"count\",\n                  fill: \"#8884d8\",\n                  children: regionData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                    fill: COLORS[index % COLORS.length]\n                  }, `cell-${index}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              display: 'flex',\n              flexDirection: 'column'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              component: \"h2\",\n              variant: \"h6\",\n              color: \"primary\",\n              gutterBottom: true,\n              children: \"Recent Discoveries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n              component: Paper,\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Hostname\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Port\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Region\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 308,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"OS Type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 309,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Tags\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Last Discovery\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 311,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      width: \"150\",\n                      children: \"Actions\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: stats.servers && stats.servers.length > 0 ? stats.servers.map(server => /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        href: \"#\",\n                        onClick: e => {\n                          e.preventDefault();\n                          handleServerClick(server.id);\n                        },\n                        style: {\n                          cursor: 'pointer',\n                          textDecoration: 'none',\n                          color: '#1976d2'\n                        },\n                        children: server.hostname\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 320,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: server.port\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 331,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: server.region\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 332,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: server.port === 22 ? /*#__PURE__*/_jsxDEV(Chip, {\n                        label: \"Linux\",\n                        color: \"success\",\n                        size: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 335,\n                        columnNumber: 31\n                      }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                        label: \"Windows\",\n                        color: \"primary\",\n                        size: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 337,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 333,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: server.tags && server.tags.map(tag => /*#__PURE__*/_jsxDEV(Chip, {\n                        label: `${tag.key}: ${tag.value}`,\n                        size: \"small\",\n                        sx: {\n                          mr: 0.5,\n                          mb: 0.5\n                        }\n                      }, tag.key, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 342,\n                        columnNumber: 31\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: server.last_discovery ? new Date(server.last_discovery).toLocaleString() : 'Never'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 350,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"contained\",\n                        size: \"small\",\n                        onClick: () => handleRunDiscovery(server.id),\n                        disabled: runningDiscoveries.includes(server.id),\n                        children: runningDiscoveries.includes(server.id) ? 'Running...' : 'Run Discovery'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 354,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 27\n                    }, this)]\n                  }, server.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 25\n                  }, this)) : /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: /*#__PURE__*/_jsxDEV(TableCell, {\n                      colSpan: 7,\n                      align: \"center\",\n                      children: \"No servers available\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 367,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"right\",\n      open: drawerOpen,\n      onClose: handleCloseDrawer,\n      sx: {\n        width: 400,\n        flexShrink: 0,\n        '& .MuiDrawer-paper': {\n          width: 400,\n          boxSizing: 'border-box',\n          padding: 2\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: selectedServer ? selectedServer.hostname : 'Server Details'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleCloseDrawer,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), detailsLoading ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          mt: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }, this) : serverDetails ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n            children: \"Basic Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"Hostname\",\n              secondary: serverDetails.hostname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"Region\",\n              secondary: serverDetails.region\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"OS\",\n              secondary: `${serverDetails.os_name} (${serverDetails.os_version})`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"Last Boot Time\",\n              secondary: new Date(serverDetails.last_boot_time).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListSubheader, {\n            children: \"Hardware\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"CPU\",\n              secondary: `${serverDetails.cpu_model} (${serverDetails.cpu_count} cores)`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"Memory\",\n              secondary: `${serverDetails.memory_total_gb} GB`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"Disk\",\n              secondary: `${serverDetails.disk_free_gb} GB free of ${serverDetails.disk_total_gb} GB`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListSubheader, {\n            children: \"Network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this), serverDetails.ip_addresses && serverDetails.ip_addresses.map((ip, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: ip.interface_name,\n              secondary: ip.ip_address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(ListSubheader, {\n            children: \"Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 1\n              },\n              children: serverDetails.tags && serverDetails.tags.map(tag => /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${tag.key}: ${tag.value}`,\n                size: \"small\"\n              }, tag.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2,\n            display: 'flex',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => {\n              handleRunDiscovery(serverDetails.id);\n              handleCloseDrawer();\n            },\n            disabled: runningDiscoveries.includes(serverDetails.id),\n            children: runningDiscoveries.includes(serverDetails.id) ? 'Discovery Running...' : 'Run Discovery'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No server details available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Dashboard, \"6Xk+hFQ6neQQLaGNGE76P2eEeV4=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","Grid","Card","CardContent","Typography","CircularProgress","Box","Paper","Divider","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Chip","Button","Drawer","IconButton","List","ListItem","ListItemText","ListSubheader","PieChart","Pie","Cell","ResponsiveContainer","BarChart","Bar","XAxis","YAxis","Tooltip","CloseIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","runningDiscoveries","setRunningDiscoveries","selectedServer","setSelectedServer","serverDetails","setServerDetails","drawerOpen","setDrawerOpen","detailsLoading","setDetailsLoading","stats","setStats","serverCount","discoveryCount","successRate","regions","lastDiscovery","recentDiscoveries","servers","loading","setLoading","error","setError","fetchStats","response","fetch","ok","Error","status","statusText","data","json","err","console","handleRunDiscovery","serverId","method","headers","setTimeout","filter","id","handleServerClick","server","find","s","handleCloseDrawer","log","sx","display","justifyContent","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","color","variant","successRateData","name","value","regionData","Object","entries","map","region","count","COLORS","backgroundColor","padding","borderRadius","boxShadow","gutterBottom","container","spacing","mb","item","xs","md","to","style","textDecoration","toFixed","p","height","width","cx","cy","labelLine","outerRadius","fill","dataKey","label","percent","entry","index","length","flexDirection","component","href","onClick","e","preventDefault","cursor","hostname","port","size","tags","tag","key","mr","last_discovery","Date","toLocaleString","disabled","includes","colSpan","align","anchor","open","onClose","flexShrink","boxSizing","alignItems","primary","secondary","os_name","os_version","last_boot_time","cpu_model","cpu_count","memory_total_gb","disk_free_gb","disk_total_gb","ip_addresses","ip","interface_name","ip_address","flexWrap","gap","_c","$RefreshReg$"],"sources":["/Users/vobbilis/go/src/github.com/vobbilis/codegen/project1/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  CircularProgress,\n  Box,\n  Paper,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Chip,\n  Button,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  ListSubheader\n} from '@mui/material';\nimport { PieChart, Pie, Cell, ResponsiveContainer, BarChart, Bar, XAxis, YAxis, Tooltip } from 'recharts';\nimport CloseIcon from '@mui/icons-material/Close';\n\nfunction Dashboard() {\n  const [runningDiscoveries, setRunningDiscoveries] = useState([]);\n  const [selectedServer, setSelectedServer] = useState(null);\n  const [serverDetails, setServerDetails] = useState(null);\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [detailsLoading, setDetailsLoading] = useState(false);\n  const [stats, setStats] = useState({\n    serverCount: 0,\n    discoveryCount: 0,\n    successRate: 0,\n    regions: {},\n    lastDiscovery: null,\n    recentDiscoveries: [],\n    servers: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchStats();\n  }, []);\n\n  const fetchStats = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/stats');\n      if (!response.ok) {\n        throw new Error(`API returned ${response.status}: ${response.statusText}`);\n      }\n      const data = await response.json();\n      setStats(data);\n      setError(null);\n    } catch (err) {\n      console.error('Error fetching stats:', err);\n      setError('Failed to load dashboard data. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle running a discovery on a server\n  const handleRunDiscovery = async (serverId) => {\n    try {\n      // Add the server ID to the running discoveries list\n      setRunningDiscoveries([...runningDiscoveries, serverId]);\n      \n      // Make API call to start discovery\n      const response = await fetch(`/api/servers/${serverId}/discover`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      if (!response.ok) {\n        throw new Error(`API returned ${response.status}: ${response.statusText}`);\n      }\n      \n      // Refresh stats after a short delay to allow the discovery to start\n      setTimeout(() => {\n        fetchStats();\n        // Remove the server from running discoveries\n        setRunningDiscoveries(runningDiscoveries.filter(id => id !== serverId));\n      }, 2000);\n    } catch (err) {\n      console.error(`Error starting discovery for server ${serverId}:`, err);\n      setError(`Failed to start discovery for server ID ${serverId}`);\n      // Remove the server from running discoveries\n      setRunningDiscoveries(runningDiscoveries.filter(id => id !== serverId));\n    }\n  };\n\n  // Handle opening the server details drawer\n  const handleServerClick = async (serverId) => {\n    try {\n      setDetailsLoading(true);\n      setDrawerOpen(true);\n      \n      // Find the server in the current stats\n      const server = stats.servers.find(s => s.id === serverId);\n      setSelectedServer(server);\n      \n      // Fetch detailed server information\n      const response = await fetch(`/api/servers/${serverId}`);\n      if (!response.ok) {\n        throw new Error(`API returned ${response.status}: ${response.statusText}`);\n      }\n      \n      const data = await response.json();\n      setServerDetails(data);\n    } catch (err) {\n      console.error(`Error fetching server details for server ${serverId}:`, err);\n      setError(`Failed to load server details for ID ${serverId}`);\n    } finally {\n      setDetailsLoading(false);\n    }\n  };\n\n  // Handle closing the drawer\n  const handleCloseDrawer = () => {\n    setDrawerOpen(false);\n  };\n\n  // Debug render\n  console.log('Dashboard rendering with stats:', stats, 'loading:', loading, 'error:', error);\n\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box sx={{ mt: 4 }}>\n        <Typography color=\"error\" variant=\"h6\">\n          Error: {error}\n        </Typography>\n      </Box>\n    );\n  }\n\n  if (!stats) {\n    return (\n      <Box sx={{ mt: 4 }}>\n        <Typography color=\"error\" variant=\"h6\">\n          No data available\n        </Typography>\n      </Box>\n    );\n  }\n\n  // Prepare data for charts\n  const successRateData = [\n    { name: 'Success', value: stats.successRate },\n    { name: 'Failure', value: 100 - stats.successRate },\n  ];\n\n  const regionData = Object.entries(stats.regions || {}).map(([region, count]) => ({\n    name: region || 'Unknown',\n    count,\n  }));\n\n  const COLORS = ['#00C49F', '#FF8042', '#0088FE', '#FFBB28', '#8884d8'];\n\n  return (\n    <>\n      <Box sx={{ \n        backgroundColor: 'background.paper', \n        padding: 2, \n        borderRadius: 1,\n        boxShadow: 1\n      }}>\n        <Typography variant=\"h4\" gutterBottom>\n          Server Discovery Dashboard\n        </Typography>\n        \n        {/* Stats Cards */}\n        <Grid container spacing={3} sx={{ mb: 3 }}>\n          <Grid item xs={12} md={4}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  Servers\n                </Typography>\n                <Typography variant=\"h3\" color=\"primary\">\n                  {stats.serverCount}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  <Link to=\"/servers\">View all servers</Link>\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  Discoveries\n                </Typography>\n                <Typography variant=\"h3\" color=\"primary\">\n                  <Link \n                    to=\"/discoveries\" \n                    style={{ \n                      color: 'inherit', \n                      textDecoration: 'none',\n                      '&:hover': {\n                        textDecoration: 'underline',\n                        color: 'primary.main'\n                      }\n                    }}\n                  >\n                    {stats.discoveryCount}\n                  </Link>\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Total discovery operations\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  Success Rate\n                </Typography>\n                <Typography variant=\"h3\" color=\"primary\">\n                  {stats.successRate.toFixed(1)}%\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Discovery success rate\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n        \n        {/* Charts and Tables */}\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={6}>\n            <Paper sx={{ p: 2, height: 300 }}>\n              <Typography variant=\"h6\" gutterBottom>\n                Success Rate\n              </Typography>\n              <ResponsiveContainer width=\"100%\" height=\"90%\">\n                <PieChart>\n                  <Pie\n                    data={successRateData}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    labelLine={false}\n                    outerRadius={80}\n                    fill=\"#8884d8\"\n                    dataKey=\"value\"\n                    label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(1)}%`}\n                  >\n                    {successRateData.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={index === 0 ? '#00C49F' : '#FF8042'} />\n                    ))}\n                  </Pie>\n                  <Tooltip />\n                </PieChart>\n              </ResponsiveContainer>\n            </Paper>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Paper sx={{ p: 2, height: 300 }}>\n              <Typography variant=\"h6\" gutterBottom>\n                Servers by Region\n              </Typography>\n              <ResponsiveContainer width=\"100%\" height=\"90%\">\n                <BarChart data={regionData}>\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Bar dataKey=\"count\" fill=\"#8884d8\">\n                    {regionData.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                    ))}\n                  </Bar>\n                </BarChart>\n              </ResponsiveContainer>\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column' }}>\n              <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                Recent Discoveries\n              </Typography>\n              <TableContainer component={Paper}>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Hostname</TableCell>\n                      <TableCell>Port</TableCell>\n                      <TableCell>Region</TableCell>\n                      <TableCell>OS Type</TableCell>\n                      <TableCell>Tags</TableCell>\n                      <TableCell>Last Discovery</TableCell>\n                      <TableCell width=\"150\">Actions</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {stats.servers && stats.servers.length > 0 ? (\n                      stats.servers.map((server) => (\n                        <TableRow key={server.id}>\n                          <TableCell>\n                            <Link \n                              href=\"#\" \n                              onClick={(e) => {\n                                e.preventDefault();\n                                handleServerClick(server.id);\n                              }}\n                              style={{ cursor: 'pointer', textDecoration: 'none', color: '#1976d2' }}\n                            >\n                              {server.hostname}\n                            </Link>\n                          </TableCell>\n                          <TableCell>{server.port}</TableCell>\n                          <TableCell>{server.region}</TableCell>\n                          <TableCell>\n                            {server.port === 22 ? (\n                              <Chip label=\"Linux\" color=\"success\" size=\"small\" />\n                            ) : (\n                              <Chip label=\"Windows\" color=\"primary\" size=\"small\" />\n                            )}\n                          </TableCell>\n                          <TableCell>\n                            {server.tags && server.tags.map((tag) => (\n                              <Chip \n                                key={tag.key} \n                                label={`${tag.key}: ${tag.value}`} \n                                size=\"small\" \n                                sx={{ mr: 0.5, mb: 0.5 }}\n                              />\n                            ))}\n                          </TableCell>\n                          <TableCell>\n                            {server.last_discovery ? new Date(server.last_discovery).toLocaleString() : 'Never'}\n                          </TableCell>\n                          <TableCell>\n                            <Button \n                              variant=\"contained\" \n                              size=\"small\" \n                              onClick={() => handleRunDiscovery(server.id)}\n                              disabled={runningDiscoveries.includes(server.id)}\n                            >\n                              {runningDiscoveries.includes(server.id) ? 'Running...' : 'Run Discovery'}\n                            </Button>\n                          </TableCell>\n                        </TableRow>\n                      ))\n                    ) : (\n                      <TableRow>\n                        <TableCell colSpan={7} align=\"center\">\n                          No servers available\n                        </TableCell>\n                      </TableRow>\n                    )}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Box>\n      \n      {/* Server Details Drawer */}\n      <Drawer\n        anchor=\"right\"\n        open={drawerOpen}\n        onClose={handleCloseDrawer}\n        sx={{\n          width: 400,\n          flexShrink: 0,\n          '& .MuiDrawer-paper': {\n            width: 400,\n            boxSizing: 'border-box',\n            padding: 2\n          },\n        }}\n      >\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n          <Typography variant=\"h6\">\n            {selectedServer ? selectedServer.hostname : 'Server Details'}\n          </Typography>\n          <IconButton onClick={handleCloseDrawer}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n        \n        <Divider sx={{ mb: 2 }} />\n        \n        {detailsLoading ? (\n          <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\n            <CircularProgress />\n          </Box>\n        ) : serverDetails ? (\n          <>\n            <List>\n              <ListSubheader>Basic Information</ListSubheader>\n              <ListItem>\n                <ListItemText primary=\"Hostname\" secondary={serverDetails.hostname} />\n              </ListItem>\n              <ListItem>\n                <ListItemText primary=\"Region\" secondary={serverDetails.region} />\n              </ListItem>\n              <ListItem>\n                <ListItemText primary=\"OS\" secondary={`${serverDetails.os_name} (${serverDetails.os_version})`} />\n              </ListItem>\n              <ListItem>\n                <ListItemText \n                  primary=\"Last Boot Time\" \n                  secondary={new Date(serverDetails.last_boot_time).toLocaleString()} \n                />\n              </ListItem>\n              \n              <ListSubheader>Hardware</ListSubheader>\n              <ListItem>\n                <ListItemText primary=\"CPU\" secondary={`${serverDetails.cpu_model} (${serverDetails.cpu_count} cores)`} />\n              </ListItem>\n              <ListItem>\n                <ListItemText primary=\"Memory\" secondary={`${serverDetails.memory_total_gb} GB`} />\n              </ListItem>\n              <ListItem>\n                <ListItemText \n                  primary=\"Disk\" \n                  secondary={`${serverDetails.disk_free_gb} GB free of ${serverDetails.disk_total_gb} GB`} \n                />\n              </ListItem>\n              \n              <ListSubheader>Network</ListSubheader>\n              {serverDetails.ip_addresses && serverDetails.ip_addresses.map((ip, index) => (\n                <ListItem key={index}>\n                  <ListItemText \n                    primary={ip.interface_name} \n                    secondary={ip.ip_address} \n                  />\n                </ListItem>\n              ))}\n              \n              <ListSubheader>Tags</ListSubheader>\n              <ListItem>\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n                  {serverDetails.tags && serverDetails.tags.map((tag) => (\n                    <Chip \n                      key={tag.key} \n                      label={`${tag.key}: ${tag.value}`} \n                      size=\"small\" \n                    />\n                  ))}\n                </Box>\n              </ListItem>\n            </List>\n            \n            <Box sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n              <Button \n                variant=\"contained\" \n                onClick={() => {\n                  handleRunDiscovery(serverDetails.id);\n                  handleCloseDrawer();\n                }}\n                disabled={runningDiscoveries.includes(serverDetails.id)}\n              >\n                {runningDiscoveries.includes(serverDetails.id) ? 'Discovery Running...' : 'Run Discovery'}\n              </Button>\n            </Box>\n          </>\n        ) : (\n          <Typography>No server details available</Typography>\n        )}\n      </Drawer>\n    </>\n  );\n}\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}