{"ast":null,"code":"var _jsxFileName = \"/Users/vobbilis/go/src/github.com/vobbilis/codegen/project1/frontend/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Grid, Card, CardContent, Typography, CircularProgress, Box, Paper, Divider, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Chip, Button } from '@mui/material';\nimport { PieChart, Pie, Cell, ResponsiveContainer, BarChart, Bar, XAxis, YAxis, Tooltip } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [runningDiscoveries, setRunningDiscoveries] = useState([]);\n  const [stats, setStats] = useState({\n    serverCount: 0,\n    discoveryCount: 0,\n    successRate: 0,\n    regions: {},\n    lastDiscovery: null,\n    recentDiscoveries: [],\n    servers: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchStats();\n  }, []);\n  const fetchStats = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/stats');\n      if (!response.ok) {\n        throw new Error(`API returned ${response.status}: ${response.statusText}`);\n      }\n      const data = await response.json();\n      setStats(data);\n      setError(null);\n    } catch (err) {\n      console.error('Error fetching stats:', err);\n      setError('Failed to load dashboard data. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle running a discovery on a server\n  const handleRunDiscovery = async serverId => {\n    try {\n      // Add the server ID to the running discoveries list\n      setRunningDiscoveries([...runningDiscoveries, serverId]);\n\n      // Make API call to start discovery\n      const response = await fetch(`/api/servers/${serverId}/discover`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`API returned ${response.status}: ${response.statusText}`);\n      }\n\n      // Refresh stats after a short delay to allow the discovery to start\n      setTimeout(() => {\n        fetchStats();\n        // Remove the server from running discoveries\n        setRunningDiscoveries(runningDiscoveries.filter(id => id !== serverId));\n      }, 2000);\n    } catch (err) {\n      console.error(`Error starting discovery for server ${serverId}:`, err);\n      setError(`Failed to start discovery for server ID ${serverId}`);\n      // Remove the server from running discoveries\n      setRunningDiscoveries(runningDiscoveries.filter(id => id !== serverId));\n    }\n  };\n\n  // Debug render\n  console.log('Dashboard rendering with stats:', stats, 'loading:', loading, 'error:', error);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        variant: \"h6\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n  if (!stats) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        variant: \"h6\",\n        children: \"No data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Prepare data for charts\n  const successRateData = [{\n    name: 'Success',\n    value: stats.successRate\n  }, {\n    name: 'Failure',\n    value: 100 - stats.successRate\n  }];\n  const regionData = Object.entries(stats.regions || {}).map(([region, count]) => ({\n    name: region || 'Unknown',\n    count\n  }));\n  const COLORS = ['#00C49F', '#FF8042', '#0088FE', '#FFBB28', '#8884d8'];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      backgroundColor: 'background.paper',\n      padding: 2,\n      borderRadius: 1,\n      boxShadow: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Servers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h3\",\n              color: \"primary\",\n              children: stats.serverCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/servers\",\n                children: \"View all servers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Discoveries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h3\",\n              color: \"primary\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/discoveries\",\n                style: {\n                  color: 'inherit',\n                  textDecoration: 'none',\n                  '&:hover': {\n                    textDecoration: 'underline',\n                    color: 'primary.main'\n                  }\n                },\n                children: stats.discoveryCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: \"Total discovery operations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Success Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h3\",\n              color: \"primary\",\n              children: [stats.successRate.toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: \"Discovery success rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            height: 300\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Success Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: \"90%\",\n            children: /*#__PURE__*/_jsxDEV(PieChart, {\n              children: [/*#__PURE__*/_jsxDEV(Pie, {\n                data: successRateData,\n                cx: \"50%\",\n                cy: \"50%\",\n                labelLine: false,\n                outerRadius: 80,\n                fill: \"#8884d8\",\n                dataKey: \"value\",\n                label: ({\n                  name,\n                  percent\n                }) => `${name}: ${(percent * 100).toFixed(1)}%`,\n                children: successRateData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: index === 0 ? '#00C49F' : '#FF8042'\n                }, `cell-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            height: 300\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Servers by Region\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: \"90%\",\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: regionData,\n              children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"count\",\n                fill: \"#8884d8\",\n                children: regionData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: COLORS[index % COLORS.length]\n                }, `cell-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h2\",\n            variant: \"h6\",\n            color: \"primary\",\n            gutterBottom: true,\n            children: \"Recent Discoveries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Hostname\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Port\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Region\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"OS Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Tags\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Last Discovery\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: stats.servers && stats.servers.length > 0 ? stats.servers.map(server => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: `/servers/${server.id}`,\n                      children: server.hostname\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: server.port\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: server.region\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: server.port === 22 ? 'Linux' : 'Windows'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: server.tags && server.tags.map(tag => /*#__PURE__*/_jsxDEV(Chip, {\n                      label: `${tag.key}: ${tag.value}`,\n                      size: \"small\",\n                      sx: {\n                        mr: 0.5,\n                        mb: 0.5\n                      }\n                    }, tag.key, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: server.last_discovery ? new Date(server.last_discovery).toLocaleString() : 'Never'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      size: \"small\",\n                      onClick: () => handleRunDiscovery(server.id),\n                      disabled: runningDiscoveries.includes(server.id),\n                      children: runningDiscoveries.includes(server.id) ? 'Running...' : 'Run Discovery'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 25\n                  }, this)]\n                }, server.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: 7,\n                    align: \"center\",\n                    children: \"No servers available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"S5SFTWD+27J4W2lP7zNVS18FrbI=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","Grid","Card","CardContent","Typography","CircularProgress","Box","Paper","Divider","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Chip","Button","PieChart","Pie","Cell","ResponsiveContainer","BarChart","Bar","XAxis","YAxis","Tooltip","jsxDEV","_jsxDEV","Dashboard","_s","runningDiscoveries","setRunningDiscoveries","stats","setStats","serverCount","discoveryCount","successRate","regions","lastDiscovery","recentDiscoveries","servers","loading","setLoading","error","setError","fetchStats","response","fetch","ok","Error","status","statusText","data","json","err","console","handleRunDiscovery","serverId","method","headers","setTimeout","filter","id","log","sx","display","justifyContent","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","color","variant","successRateData","name","value","regionData","Object","entries","map","region","count","COLORS","backgroundColor","padding","borderRadius","boxShadow","gutterBottom","container","spacing","item","xs","md","to","style","textDecoration","toFixed","p","height","width","cx","cy","labelLine","outerRadius","fill","dataKey","label","percent","entry","index","length","flexDirection","component","server","hostname","port","tags","tag","key","size","mr","mb","last_discovery","Date","toLocaleString","onClick","disabled","includes","colSpan","align","_c","$RefreshReg$"],"sources":["/Users/vobbilis/go/src/github.com/vobbilis/codegen/project1/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  CircularProgress,\n  Box,\n  Paper,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Chip,\n  Button\n} from '@mui/material';\nimport { PieChart, Pie, Cell, ResponsiveContainer, BarChart, Bar, XAxis, YAxis, Tooltip } from 'recharts';\n\nfunction Dashboard() {\n  const [runningDiscoveries, setRunningDiscoveries] = useState([]);\n  const [stats, setStats] = useState({\n    serverCount: 0,\n    discoveryCount: 0,\n    successRate: 0,\n    regions: {},\n    lastDiscovery: null,\n    recentDiscoveries: [],\n    servers: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchStats();\n  }, []);\n\n  const fetchStats = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/stats');\n      if (!response.ok) {\n        throw new Error(`API returned ${response.status}: ${response.statusText}`);\n      }\n      const data = await response.json();\n      setStats(data);\n      setError(null);\n    } catch (err) {\n      console.error('Error fetching stats:', err);\n      setError('Failed to load dashboard data. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle running a discovery on a server\n  const handleRunDiscovery = async (serverId) => {\n    try {\n      // Add the server ID to the running discoveries list\n      setRunningDiscoveries([...runningDiscoveries, serverId]);\n      \n      // Make API call to start discovery\n      const response = await fetch(`/api/servers/${serverId}/discover`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      if (!response.ok) {\n        throw new Error(`API returned ${response.status}: ${response.statusText}`);\n      }\n      \n      // Refresh stats after a short delay to allow the discovery to start\n      setTimeout(() => {\n        fetchStats();\n        // Remove the server from running discoveries\n        setRunningDiscoveries(runningDiscoveries.filter(id => id !== serverId));\n      }, 2000);\n    } catch (err) {\n      console.error(`Error starting discovery for server ${serverId}:`, err);\n      setError(`Failed to start discovery for server ID ${serverId}`);\n      // Remove the server from running discoveries\n      setRunningDiscoveries(runningDiscoveries.filter(id => id !== serverId));\n    }\n  };\n\n  // Debug render\n  console.log('Dashboard rendering with stats:', stats, 'loading:', loading, 'error:', error);\n\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box sx={{ mt: 4 }}>\n        <Typography color=\"error\" variant=\"h6\">\n          Error: {error}\n        </Typography>\n      </Box>\n    );\n  }\n\n  if (!stats) {\n    return (\n      <Box sx={{ mt: 4 }}>\n        <Typography color=\"error\" variant=\"h6\">\n          No data available\n        </Typography>\n      </Box>\n    );\n  }\n\n  // Prepare data for charts\n  const successRateData = [\n    { name: 'Success', value: stats.successRate },\n    { name: 'Failure', value: 100 - stats.successRate },\n  ];\n\n  const regionData = Object.entries(stats.regions || {}).map(([region, count]) => ({\n    name: region || 'Unknown',\n    count,\n  }));\n\n  const COLORS = ['#00C49F', '#FF8042', '#0088FE', '#FFBB28', '#8884d8'];\n\n  return (\n    <Box sx={{ \n      backgroundColor: 'background.paper', \n      padding: 2, \n      borderRadius: 1,\n      boxShadow: 1\n    }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Dashboard\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={4}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Servers\n              </Typography>\n              <Typography variant=\"h3\" color=\"primary\">\n                {stats.serverCount}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                <Link to=\"/servers\">View all servers</Link>\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Discoveries\n              </Typography>\n              <Typography variant=\"h3\" color=\"primary\">\n                <Link \n                  to=\"/discoveries\" \n                  style={{ \n                    color: 'inherit', \n                    textDecoration: 'none',\n                    '&:hover': {\n                      textDecoration: 'underline',\n                      color: 'primary.main'\n                    }\n                  }}\n                >\n                  {stats.discoveryCount}\n                </Link>\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                Total discovery operations\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Success Rate\n              </Typography>\n              <Typography variant=\"h3\" color=\"primary\">\n                {stats.successRate.toFixed(1)}%\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                Discovery success rate\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper sx={{ p: 2, height: 300 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Success Rate\n            </Typography>\n            <ResponsiveContainer width=\"100%\" height=\"90%\">\n              <PieChart>\n                <Pie\n                  data={successRateData}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                  label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(1)}%`}\n                >\n                  {successRateData.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={index === 0 ? '#00C49F' : '#FF8042'} />\n                  ))}\n                </Pie>\n                <Tooltip />\n              </PieChart>\n            </ResponsiveContainer>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper sx={{ p: 2, height: 300 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Servers by Region\n            </Typography>\n            <ResponsiveContainer width=\"100%\" height=\"90%\">\n              <BarChart data={regionData}>\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Bar dataKey=\"count\" fill=\"#8884d8\">\n                  {regionData.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Bar>\n              </BarChart>\n            </ResponsiveContainer>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column' }}>\n            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n              Recent Discoveries\n            </Typography>\n            <TableContainer component={Paper}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Hostname</TableCell>\n                    <TableCell>Port</TableCell>\n                    <TableCell>Region</TableCell>\n                    <TableCell>OS Type</TableCell>\n                    <TableCell>Tags</TableCell>\n                    <TableCell>Last Discovery</TableCell>\n                    <TableCell>Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {stats.servers && stats.servers.length > 0 ? (\n                    stats.servers.map((server) => (\n                      <TableRow key={server.id}>\n                        <TableCell>\n                          <Link to={`/servers/${server.id}`}>{server.hostname}</Link>\n                        </TableCell>\n                        <TableCell>{server.port}</TableCell>\n                        <TableCell>{server.region}</TableCell>\n                        <TableCell>{server.port === 22 ? 'Linux' : 'Windows'}</TableCell>\n                        <TableCell>\n                          {server.tags && server.tags.map((tag) => (\n                            <Chip \n                              key={tag.key} \n                              label={`${tag.key}: ${tag.value}`} \n                              size=\"small\" \n                              sx={{ mr: 0.5, mb: 0.5 }}\n                            />\n                          ))}\n                        </TableCell>\n                        <TableCell>\n                          {server.last_discovery ? new Date(server.last_discovery).toLocaleString() : 'Never'}\n                        </TableCell>\n                        <TableCell>\n                          <Button \n                            variant=\"contained\" \n                            size=\"small\" \n                            onClick={() => handleRunDiscovery(server.id)}\n                            disabled={runningDiscoveries.includes(server.id)}\n                          >\n                            {runningDiscoveries.includes(server.id) ? 'Running...' : 'Run Discovery'}\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    ))\n                  ) : (\n                    <TableRow>\n                      <TableCell colSpan={7} align=\"center\">\n                        No servers available\n                      </TableCell>\n                    </TableRow>\n                  )}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}